{"ast":null,"code":"var _jsxFileName = \"/home/cristi/Personal/React_and_SpringBoot/Frontend/gym-progress/src/components/ProgressComponent.jsx\";\nimport { Component } from \"react\";\nimport ProgressDataService from \"../api/GymProgress/ProgressDataService\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProgressComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      day: this.props.params.day\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.day === -1) {\n      return;\n    }\n\n    let username = AuthenticationService.getLoggedInUsername();\n    TodoDataService.retrieveTodo(username, this.state.id).then(response => this.setState({\n      description: response.data.description,\n      targetDate: moment(response.data.targetDate).format(\"YYYY-MM-DD\")\n    }));\n  }\n\n  onSubmit(values) {\n    let username = AuthenticationService.getLoggedInUserName();\n    let todo = {\n      id: this.state.id,\n      description: values.description,\n      targetDate: values.targetDate\n    };\n\n    if (this.state.id === -1) {\n      ProgressDataService.createProgress(username, todo).then(() => this.props.navigate(\"/todos\")); //REACT-6\n    } else {\n      ProgressDataService.updateProgress(username, this.state.id, todo).then(() => this.props.navigate(\"/todos\")); //REACT-6\n    }\n\n    console.log(values);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Progress Component for Day - \", this.props.match.params.day]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default ProgressComponent;","map":{"version":3,"sources":["/home/cristi/Personal/React_and_SpringBoot/Frontend/gym-progress/src/components/ProgressComponent.jsx"],"names":["Component","ProgressDataService","AuthenticationService","ProgressComponent","constructor","props","state","day","params","componentDidMount","username","getLoggedInUsername","TodoDataService","retrieveTodo","id","then","response","setState","description","data","targetDate","moment","format","onSubmit","values","getLoggedInUserName","todo","createProgress","navigate","updateProgress","console","log","render","match"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,mBAAP,MAAgC,wCAAhC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;;AAEA,MAAMC,iBAAN,SAAgCH,SAAhC,CAA0C;AACtCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,MAAX,CAAkBD;AADd,KAAb;AAGH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKH,KAAL,CAAWC,GAAX,KAAmB,CAAC,CAAxB,EAA2B;AACvB;AACH;;AAED,QAAIG,QAAQ,GAAGR,qBAAqB,CAACS,mBAAtB,EAAf;AAEAC,IAAAA,eAAe,CAACC,YAAhB,CAA6BH,QAA7B,EAAuC,KAAKJ,KAAL,CAAWQ,EAAlD,EAAsDC,IAAtD,CAA4DC,QAAD,IACvD,KAAKC,QAAL,CAAc;AACVC,MAAAA,WAAW,EAAEF,QAAQ,CAACG,IAAT,CAAcD,WADjB;AAEVE,MAAAA,UAAU,EAAEC,MAAM,CAACL,QAAQ,CAACG,IAAT,CAAcC,UAAf,CAAN,CAAiCE,MAAjC,CAAwC,YAAxC;AAFF,KAAd,CADJ;AAMH;;AAEDC,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,QAAId,QAAQ,GAAGR,qBAAqB,CAACuB,mBAAtB,EAAf;AAEA,QAAIC,IAAI,GAAG;AACPZ,MAAAA,EAAE,EAAE,KAAKR,KAAL,CAAWQ,EADR;AAEPI,MAAAA,WAAW,EAAEM,MAAM,CAACN,WAFb;AAGPE,MAAAA,UAAU,EAAEI,MAAM,CAACJ;AAHZ,KAAX;;AAMA,QAAI,KAAKd,KAAL,CAAWQ,EAAX,KAAkB,CAAC,CAAvB,EAA0B;AACtBb,MAAAA,mBAAmB,CAAC0B,cAApB,CAAmCjB,QAAnC,EAA6CgB,IAA7C,EAAmDX,IAAnD,CAAwD,MAAM,KAAKV,KAAL,CAAWuB,QAAX,CAAoB,QAApB,CAA9D,EADsB,CACwE;AACjG,KAFD,MAEO;AACH3B,MAAAA,mBAAmB,CAAC4B,cAApB,CAAmCnB,QAAnC,EAA6C,KAAKJ,KAAL,CAAWQ,EAAxD,EAA4DY,IAA5D,EAAkEX,IAAlE,CAAuE,MAAM,KAAKV,KAAL,CAAWuB,QAAX,CAAoB,QAApB,CAA7E,EADG,CAC0G;AAChH;;AAEDE,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,kDAAmC,KAAK3B,KAAL,CAAW4B,KAAX,CAAiBzB,MAAjB,CAAwBD,GAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AA5CqC;;AA+C1C,eAAeJ,iBAAf","sourcesContent":["import { Component } from \"react\";\nimport ProgressDataService from \"../api/GymProgress/ProgressDataService\";\nimport AuthenticationService from \"./AuthenticationService\";\n\nclass ProgressComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            day: this.props.params.day,\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.day === -1) {\n            return;\n        }\n\n        let username = AuthenticationService.getLoggedInUsername();\n\n        TodoDataService.retrieveTodo(username, this.state.id).then((response) =>\n            this.setState({\n                description: response.data.description,\n                targetDate: moment(response.data.targetDate).format(\"YYYY-MM-DD\"),\n            })\n        );\n    }\n\n    onSubmit(values) {\n        let username = AuthenticationService.getLoggedInUserName();\n\n        let todo = {\n            id: this.state.id,\n            description: values.description,\n            targetDate: values.targetDate,\n        };\n\n        if (this.state.id === -1) {\n            ProgressDataService.createProgress(username, todo).then(() => this.props.navigate(\"/todos\")); //REACT-6\n        } else {\n            ProgressDataService.updateProgress(username, this.state.id, todo).then(() => this.props.navigate(\"/todos\")); //REACT-6\n        }\n\n        console.log(values);\n    }\n\n    render() {\n        return <div>Progress Component for Day - {this.props.match.params.day}</div>;\n    }\n}\n\nexport default ProgressComponent;\n"]},"metadata":{},"sourceType":"module"}