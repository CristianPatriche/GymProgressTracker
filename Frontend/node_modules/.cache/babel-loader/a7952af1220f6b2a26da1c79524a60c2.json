{"ast":null,"code":"var _jsxFileName = \"/home/cristi/Personal/React_and_SpringBoot/Frontend/gym-progress/src/components/ProgressComponent.jsx\";\nimport { Component } from \"react\";\nimport moment from \"moment\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport ProgressDataService from \"../api/GymProgress/ProgressDataService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProgressComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      day: this.props.params.day,\n      description: \"\",\n      date: moment(new Date()).format(\"YYYY-MM-DD\")\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.day < 1) {\n      return;\n    }\n\n    let username = AuthenticationService.getLoggedInUsername();\n    ProgressDataService.retrieveProgress(username, this.state.day).then(response => this.setState({\n      description: response.data.description,\n      date: moment(response.data.date).format(\"YYYY-MM-DD\")\n    }));\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.description) {\n      errors.description = \"Enter a description.\";\n    } else if (values.description.length < 5) {\n      errors.description = \"Enter atleast 5 characters in description.\";\n    }\n\n    if (!moment(values.date).isValid()) {\n      errors.date = \"Enter a valid date.\";\n    }\n\n    return errors;\n  }\n\n  onSubmit(values) {\n    let username = AuthenticationService.getLoggedInUsername();\n    let progress = {\n      day: this.state.day,\n      description: values.description,\n      date: values.date\n    };\n\n    if (this.state.day === -1) {\n      ProgressDataService.createProgress(username, progress).then(() => this.props.navigate(\"/progresses\"));\n    } else {\n      ProgressDataService.updateProgress(username, this.state.day, progress).then(() => this.props.navigate(\"/progresses\"));\n    }\n  }\n\n  render() {\n    let {\n      description,\n      date\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.props.params.day > 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Updating the progress for day \", this.props.params.day]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 47\n      }, this), this.props.params.day < 1 && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add a new progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 47\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            description,\n            date\n          },\n          onSubmit: this.onSubmit,\n          validateOnChange: false,\n          validateOnBlur: false,\n          validate: this.validate,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"date\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"date\",\n                name: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProgressComponent;","map":{"version":3,"sources":["/home/cristi/Personal/React_and_SpringBoot/Frontend/gym-progress/src/components/ProgressComponent.jsx"],"names":["Component","moment","ErrorMessage","Field","Form","Formik","AuthenticationService","ProgressDataService","ProgressComponent","constructor","props","state","day","params","description","date","Date","format","onSubmit","bind","validate","componentDidMount","username","getLoggedInUsername","retrieveProgress","then","response","setState","data","values","errors","length","isValid","progress","createProgress","navigate","updateProgress","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport moment from \"moment\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport ProgressDataService from \"../api/GymProgress/ProgressDataService\";\n\nclass ProgressComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            day: this.props.params.day,\n            description: \"\",\n            date: moment(new Date()).format(\"YYYY-MM-DD\"),\n        };\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.validate = this.validate.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.state.day < 1) {\n            return;\n        }\n\n        let username = AuthenticationService.getLoggedInUsername();\n\n        ProgressDataService.retrieveProgress(username, this.state.day).then((response) =>\n            this.setState({\n                description: response.data.description,\n                date: moment(response.data.date).format(\"YYYY-MM-DD\"),\n            })\n        );\n    }\n\n    validate(values) {\n        let errors = {};\n        if (!values.description) {\n            errors.description = \"Enter a description.\";\n        } else if (values.description.length < 5) {\n            errors.description = \"Enter atleast 5 characters in description.\";\n        }\n\n        if (!moment(values.date).isValid()) {\n            errors.date = \"Enter a valid date.\";\n        }\n\n        return errors;\n    }\n\n    onSubmit(values) {\n        let username = AuthenticationService.getLoggedInUsername();\n\n        let progress = {\n            day: this.state.day,\n            description: values.description,\n            date: values.date,\n        };\n\n        if (this.state.day === -1) {\n            ProgressDataService.createProgress(username, progress).then(() => this.props.navigate(\"/progresses\"));\n        } else {\n            ProgressDataService.updateProgress(username, this.state.day, progress).then(() =>\n                this.props.navigate(\"/progresses\")\n            );\n        }\n    }\n\n    render() {\n        let { description, date } = this.state;\n\n        return (\n            <div>\n                {this.props.params.day > 0 && <h1>Updating the progress for day {this.props.params.day}</h1>}\n                {this.props.params.day < 1 && <h1>Add a new progress</h1>}\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ description, date }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {(props) => (\n                            <Form>\n                                <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\" />\n                                <ErrorMessage name=\"date\" component=\"div\" className=\"alert alert-warning\" />\n                                <fieldset className=\"form-group\">\n                                    <label>Description</label>\n                                    <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <label>Date</label>\n                                    <Field className=\"form-control\" type=\"date\" name=\"date\" />\n                                </fieldset>\n                                <button className=\"btn btn-success\" type=\"submit\">\n                                    Save\n                                </button>\n                            </Form>\n                        )}\n                    </Formik>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProgressComponent;\n"]},"metadata":{},"sourceType":"module"}